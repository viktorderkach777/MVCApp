@using AjaxSimpleHelper.Models

@model IEnumerable<DBPlace>

@foreach (var item in Model)
{
    <tr>
        <td>@Html.DisplayFor(m => item.Id)</td>
        <td>@Html.DisplayFor(m => item.Name)</td>
        <td>@Html.DisplayFor(m => item.LinkRef)</td>
        <td>@Html.DisplayFor(m => item.LinkText)</td>
        <td>@Html.DisplayFor(m => item.AboutPlace)</td>
        <td>@Html.DisplayFor(m => item.OpenTime)</td>
        <td>@Html.DisplayFor(m => item.CloseTime)</td>
        <td>@Html.DisplayFor(m => item.Rate)</td>
        <td>@Html.DisplayFor(m => item.Icon)</td>
        <td>@Html.DisplayFor(m => item.Longitude)</td>
        <td>@Html.DisplayFor(m => item.Latitude)</td>


    </tr>

    string descr = "<strong>" + item.Name + "</strong> <p>" + item.LinkRef + item.LinkText + "</a>" + item.AboutPlace + "</p><p>" + item.OpenTime + "-" + item.CloseTime + "</p>";

    PropertiesJS propertiesJS = new PropertiesJS()
    {
        description = descr,
        icon = item.Icon
    };

    string propertiesJson = Newtonsoft.Json.JsonConvert.SerializeObject(propertiesJS);


    GeometryJS geometryJS = new GeometryJS()
    {
        type = "Point"
    };

    geometryJS.coordinates[0] = item.Longitude;
    geometryJS.coordinates[1] = item.Latitude;

    string geometryJson = Newtonsoft.Json.JsonConvert.SerializeObject(geometryJS);


    PlaceJs placeJs= new PlaceJs()
    {
        type = "Feature",
        properties = propertiesJS,
        geometry = geometryJS
    };

    string placeJSon = Newtonsoft.Json.JsonConvert.SerializeObject(placeJs);


    string t = "122";




    @*<script>
        let t = "11";
    let descr = `<strong>${item.Name}</strong> <p>${item.LinkRef}${item.LinkText}</a>${item.AboutPlace}</p><p>${item.OpenTime}-${item.CloseTime}</p>`;
    t = "12";
    Console.log(descr);
    </script>*@
}
